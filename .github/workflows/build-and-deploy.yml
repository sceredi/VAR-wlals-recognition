name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.22
      - uses: actions/setup-python@v5
        with:
            python-version: '3.10'
      - name: Create venv
        run: python3 -m venv venv || python -m venv venv
      - name: Activate venv
        run: source venv/bin/activate
      - name: Install dependencies
        run: pip install -r requirements.txt
  format:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.22
      - uses: actions/setup-python@v5
        with:
            python-version: '3.10'
      - name: Create venv
        run: python3 -m venv venv || python -m venv venv
      - name: Activate venv
        run: source venv/bin/activate
      - name: Install dependencies
        run: pip install isort
      - name: Check code format
        run: isort --check .

  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - format
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}

